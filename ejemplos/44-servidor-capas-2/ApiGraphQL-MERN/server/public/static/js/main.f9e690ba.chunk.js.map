{"version":3,"sources":["componentes/Noticia.js","generador.js","componentes/Noticias.js","App.js","index.js"],"names":["Noticia","props","noticia","marcarLeida","borrar","index","className","style","opacity","vista","src","imagen","width","borderRadius","alt","title","onClick","_id","titulo","cuerpo","autor","email","faker","locale","generarNoticia","hacker","phrase","lorem","paragraph","name","findName","image","avatar","internet","URL_NOTICIAS","Noticias","state","noticias","idObtenerNoticia","pedidas","a","body","query","variables","options","headers","axios","post","response","data","this","setState","console","error","noticiaIncorporada","guardarNoticia","push","noticiaActualizada","actualizarNoticia","log","find","noticiaBorrada","borrarNoticia","findIndex","splice","obtenerNoticias","value","onChange","e","target","placeholder","type","incorporarNoticia","length","map","actualizarComoLeida","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9e690ba.chunk.js","sourcesContent":["import './Noticia.css'\r\n\r\nfunction Noticia(props) {\r\n    let { noticia, marcarLeida,borrar,index } = props\r\n    return (\r\n        <div className=\"Noticia\" style={{opacity: noticia.vista? '0.5': '1'}}>\r\n            <div className=\"media alert alert-primary my-4\">\r\n                <img src={noticia.imagen} style={{width:'350px', borderRadius:'15px'}}  alt={noticia.title} />\r\n                <div className=\"media-body ml-4\">\r\n\r\n                    {/* ------------- */}\r\n                    {/* Botón de leer */}\r\n                    {/* ------------- */}\r\n                    <button className=\"btn btn-warning float-right\" onClick={ \r\n                        () => marcarLeida(noticia._id)}><i className=\"fab fa-readme\"> Leida</i></button>\r\n\r\n                    {/* --------------- */}\r\n                    {/* Botón de borrar */}\r\n                    {/* --------------- */}\r\n                    <button className=\"btn btn-danger float-left\" onClick={ \r\n                        () => borrar(noticia._id)}\r\n                    ><i className=\"far fa-trash-alt\"> Borrar</i></button>\r\n\r\n                    {/* --------------------------- */}\r\n                    {/* Represntación de la noticia */}\r\n                    {/* --------------------------- */}\r\n                    <h3 className=\"text-center font-italic text-uppercase\"><u>Noticia Nro. {index+1}</u></h3>\r\n                    <br />\r\n                    <h3>{noticia.titulo}</h3>\r\n                    <p><i>{noticia.cuerpo}</i></p>\r\n                    <p><b>{noticia.autor}</b></p>\r\n                    <p><b><i>{noticia.email}</i></b></p>\r\n                    <p><b>ID: </b><i>{noticia._id}</i></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Noticia","import faker from 'faker'\r\n\r\nfaker.locale = \"es\";\r\n\r\nconst generarNoticia = () => ({\r\n    titulo: faker.hacker.phrase(),\r\n    cuerpo: faker.lorem.paragraph(),\r\n    autor: faker.name.findName(),\r\n    imagen: faker.image.avatar(),\r\n    email: faker.internet.email(),\r\n    vista: false\r\n})\r\n \r\nexport default generarNoticia","import React from 'react'\r\nimport Noticia from './Noticia'\r\n\r\nimport axios from 'axios'\r\n\r\nimport './Noticias.css'\r\nimport generarNoticia from '../generador'\r\n\r\nconst URL_NOTICIAS = (process.env.NODE_ENV === 'production'? '': 'http://localhost:8080') + '/noticias/'\r\n\r\nclass Noticias extends React.Component {\r\n\r\n    state = {\r\n        noticias : [],\r\n        idObtenerNoticia : '',\r\n        pedidas : false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //this.obtenerNoticias()\r\n    }\r\n\r\n    /* ------------------------------- */\r\n    /*       GET noticia (query)       */\r\n    /* ------------------------------- */\r\n    async obtenerNoticias(_id) {\r\n        try {\r\n            let body =  { \r\n                query: `\r\n                    query {\r\n                        noticias${_id?('(_id: \"'+_id+'\")'):''} {\r\n                            _id\r\n                            titulo\r\n                            cuerpo\r\n                            imagen\r\n                            email\r\n                            vista\r\n                        }\r\n                    }\r\n                `, \r\n                variables: {}\r\n            }\r\n            let options = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            let response = await axios.post(URL_NOTICIAS, body, options)\r\n            let { data: {data: {noticias}} } = response\r\n            this.setState({noticias: noticias? noticias : []})\r\n        }\r\n        catch(error) {\r\n            console.error(error)\r\n            this.setState({noticias: []})\r\n        }\r\n        this.setState({pedidas : true, idObtenerNoticia: ''})        \r\n    }\r\n\r\n    /* ------------------------------- */\r\n    /*     POST noticia (mutation)     */\r\n    /* ------------------------------- */\r\n    async incorporarNoticia() {\r\n        try {\r\n            let noticia = generarNoticia()\r\n\r\n            let body =  { \r\n                query: `\r\n                    mutation guardarNoticia($titulo: String!,$cuerpo: String!,$autor: String!,$imagen: String!,$email: String!,$vista: Boolean!) {\r\n                        guardarNoticia( titulo: $titulo,cuerpo: $cuerpo, autor: $autor,imagen: $imagen, email: $email, vista: $vista){\r\n                            _id\r\n                            titulo\r\n                            cuerpo\r\n                            autor\r\n                            imagen\r\n                            email\r\n                            vista\r\n                        }\r\n                    }\r\n                `, \r\n                variables: noticia\r\n            }\r\n            let options = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            let response = await axios.post(URL_NOTICIAS, body, options)\r\n            let { data: {data: {guardarNoticia: noticiaIncorporada}} } = response\r\n\r\n            //incorporo noticia en local\r\n            let noticias = [...this.state.noticias]\r\n            noticias.push(noticiaIncorporada)\r\n            this.setState({noticias})\r\n        }\r\n        catch(error) {\r\n            console.error('incorporarNoticia',error)\r\n        }\r\n    }\r\n\r\n    /* ------------------------------- */\r\n    /*    UPDATE noticia (mutation)    */\r\n    /* ------------------------------- */\r\n    async actualizarComoLeida(_id) {\r\n        try {\r\n            let body =  { \r\n                query: `\r\n                    mutation actualizarNoticia($_id: String!,$vista: Boolean!) {\r\n                        actualizarNoticia( _id: $_id, vista: $vista){\r\n                            _id\r\n                            titulo\r\n                            cuerpo\r\n                            autor\r\n                            imagen\r\n                            email\r\n                            vista\r\n                        }\r\n                    }\r\n                `, \r\n                variables: {\r\n                    _id: _id,\r\n                    vista : true\r\n                }\r\n            }\r\n            let options = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            let response = await axios.post(URL_NOTICIAS, body, options)\r\n            let { data: {data: {actualizarNoticia: noticiaActualizada}} } = response\r\n            console.log(noticiaActualizada)\r\n\r\n            //actualizo noticia en local\r\n            let noticias = [...this.state.noticias]\r\n            noticias.find(noticia => noticia._id === _id).vista = true\r\n            this.setState({noticias})\r\n        }\r\n        catch(error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    /* ------------------------------- */\r\n    /*    DELETE noticia (mutation)    */\r\n    /* ------------------------------- */\r\n    async borrarNoticia(_id) {\r\n        try {\r\n            let body =  { \r\n                query: `\r\n                    mutation borrarNoticia($_id: String!) {\r\n                        borrarNoticia( _id: $_id){\r\n                            _id\r\n                            titulo\r\n                            cuerpo\r\n                            autor\r\n                            imagen\r\n                            email\r\n                            vista\r\n                        }\r\n                    }\r\n                `, \r\n                variables: {\r\n                    _id: _id\r\n                }\r\n            }\r\n            let options = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            let response = await axios.post(URL_NOTICIAS, body, options)\r\n            let { data: {data: {borrarNoticia: noticiaBorrada}} } = response\r\n            console.log(noticiaBorrada)\r\n            \r\n            //borro noticia en local\r\n            let noticias = [...this.state.noticias]\r\n            let index = noticias.findIndex(noticia => noticia._id === _id)\r\n            noticias.splice(index , 1)\r\n            this.setState({noticias})\r\n        }\r\n        catch(error) {\r\n            console.error('borrarNoticia',error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { noticias,idObtenerNoticia,pedidas } = this.state\r\n        return (\r\n            <div className=\"Noticias\">\r\n                <div className=\"container mt-3\">\r\n                    <div className=\"jumbotron\">\r\n                        <h1>Mis Noticias - API GRAPHQL</h1>\r\n                        <hr />\r\n\r\n                        {/* ---------------- */}\r\n                        {/* Obtener noticias */}\r\n                        {/* ---------------- */}\r\n                        <button className=\"btn btn-info my-3 float-left\" onClick={ \r\n                            () => this.obtenerNoticias(idObtenerNoticia)}\r\n                        ><i className=\"fas fa-file-alt\"> Obtener</i></button>\r\n\r\n                        <input value={idObtenerNoticia} className=\"mt-3 ml-1 form-control w-25 float-left\" onChange={\r\n                            e => this.setState({idObtenerNoticia: e.target.value})\r\n                        } placeholder=\"todas ó ingrese ID\" type=\"text\" />                        \r\n\r\n                        {/* ------------- */}\r\n                        {/* Crear noticia */}\r\n                        {/* ------------- */}\r\n                        <button className=\"btn btn-success my-3 float-right\" onClick={ \r\n                            () => this.incorporarNoticia()}\r\n                        ><i className=\"fas fa-envelope-open-text\"> Generar</i></button>\r\n\r\n                        <div className=\"clearfix\"/>\r\n                        \r\n                        {/* Cartel de no hay noticias */}\r\n                        {\r\n                            !noticias.length && pedidas && \r\n                            <h3 className=\"alert alert-danger\">\r\n                                No hay noticias para mostrar\r\n                            </h3>\r\n                        }\r\n\r\n                        {/* Representación de las noticias */}\r\n                        {\r\n                            noticias.map( (noticia,index) => {\r\n                                return (\r\n                                    <Noticia \r\n                                        noticia={noticia} \r\n                                        index={index}\r\n                                        marcarLeida={ _id => this.actualizarComoLeida(_id) } \r\n                                        borrar={ _id => this.borrarNoticia(_id) } \r\n                                        key={noticia._id} \r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Noticias\r\n","import './App.css';\nimport Noticias from './componentes/Noticias';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Noticias />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}